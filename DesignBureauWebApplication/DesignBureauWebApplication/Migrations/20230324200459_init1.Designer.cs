// <auto-generated />
using System;
using DesignBureauWebApplication.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesignBureauWebApplication.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230324200459_init1")]
    partial class init1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.14")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DesignBureauWebApplication.Models.AppUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<int?>("EmployeeId")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("EmployeeId");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Assignment", b =>
                {
                    b.Property<int>("AssignmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentId"), 1L, 1);

                    b.Property<int>("AssignmentDictionaryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.HasKey("AssignmentId");

                    b.HasIndex("AssignmentDictionaryId");

                    b.HasIndex("WorkId");

                    b.ToTable("Assignment");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.AssignmentDictionary", b =>
                {
                    b.Property<int>("AssignmentDictionaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentDictionaryId"), 1L, 1);

                    b.Property<string>("AssignmentTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("AssignmentDictionaryId");

                    b.ToTable("AssignmentDictionary");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.AssignmentHistory", b =>
                {
                    b.Property<int>("AssignmentHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AssignmentHistoryId"), 1L, 1);

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("AssignmentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("AssignmentHistoryId");

                    b.HasIndex("AssignmentId");

                    b.ToTable("AssignmentHistory");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Consumption", b =>
                {
                    b.Property<int>("ConsumptionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ConsumptionId"), 1L, 1);

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ConsumptionId");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("MaterialId");

                    b.ToTable("Consumption");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EmployeeId"), 1L, 1);

                    b.Property<DateTime?>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("EFirstName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("ELastName")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("EPatronymic")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<int>("PositionId")
                        .HasColumnType("int");

                    b.HasKey("EmployeeId");

                    b.HasIndex("PositionId");

                    b.ToTable("Employee");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Equipment", b =>
                {
                    b.Property<int>("EquipmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentId"), 1L, 1);

                    b.Property<int>("EquipmentDictionaryId")
                        .HasColumnType("int");

                    b.HasKey("EquipmentId");

                    b.HasIndex("EquipmentDictionaryId");

                    b.ToTable("Equipment");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.EquipmentDictionary", b =>
                {
                    b.Property<int>("EquipmentDictionaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentDictionaryId"), 1L, 1);

                    b.Property<string>("EquipmentName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("EquipmentType")
                        .HasColumnType("int");

                    b.HasKey("EquipmentDictionaryId");

                    b.ToTable("EquipmentDictionary");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.EquipmentHistory", b =>
                {
                    b.Property<int>("EquipmentHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("EquipmentHistoryId"), 1L, 1);

                    b.Property<int>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int>("EquipmentStatus")
                        .HasColumnType("int");

                    b.Property<DateTime?>("StatusEnd")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StatusStart")
                        .HasColumnType("datetime2");

                    b.HasKey("EquipmentHistoryId");

                    b.HasIndex("EquipmentId");

                    b.ToTable("EquipmentHistory");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Execution", b =>
                {
                    b.Property<int>("ExecutionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExecutionId"), 1L, 1);

                    b.Property<int>("AssignmentId")
                        .HasColumnType("int");

                    b.Property<int>("EmployeeId")
                        .HasColumnType("int");

                    b.HasKey("ExecutionId");

                    b.HasIndex("AssignmentId");

                    b.HasIndex("EmployeeId");

                    b.ToTable("Execution");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.ExecutionOrder", b =>
                {
                    b.Property<int>("ExecutionOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ExecutionOrderId"), 1L, 1);

                    b.Property<int?>("NextWorkId")
                        .HasColumnType("int");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.HasKey("ExecutionOrderId");

                    b.HasIndex("NextWorkId");

                    b.HasIndex("WorkId");

                    b.ToTable("ExecutionOrder");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"), 1L, 1);

                    b.Property<int?>("EquipmentId")
                        .HasColumnType("int");

                    b.Property<int?>("MaterialId")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("EquipmentId")
                        .IsUnique()
                        .HasFilter("[EquipmentId] IS NOT NULL");

                    b.HasIndex("MaterialId");

                    b.ToTable("Inventory");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.InventoryTransportation", b =>
                {
                    b.Property<int>("InventoryTransportationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryTransportationId"), 1L, 1);

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<int>("TransportationId")
                        .HasColumnType("int");

                    b.HasKey("InventoryTransportationId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("TransportationId");

                    b.ToTable("InventoryTransportation");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.InventoryTransportationHistory", b =>
                {
                    b.Property<int>("InventoryTransportationHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryTransportationHistoryId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("InventoryTransportationId")
                        .HasColumnType("int");

                    b.Property<int>("InventoryTransportationStatus")
                        .HasColumnType("int");

                    b.HasKey("InventoryTransportationHistoryId");

                    b.HasIndex("InventoryTransportationId");

                    b.ToTable("InventoryTransportationHistory");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("LocationId"), 1L, 1);

                    b.Property<string>("City")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("HouseNumber")
                        .HasMaxLength(8)
                        .HasColumnType("nvarchar(8)");

                    b.Property<int?>("LocationType")
                        .HasColumnType("int");

                    b.Property<string>("Region")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<string>("Street")
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("LocationId");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Material", b =>
                {
                    b.Property<int>("MaterialId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialId"), 1L, 1);

                    b.Property<int>("MaterialDictionaryId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("MaterialId");

                    b.HasIndex("MaterialDictionaryId");

                    b.ToTable("Material");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.MaterialDictionary", b =>
                {
                    b.Property<int>("MaterialDictionaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("MaterialDictionaryId"), 1L, 1);

                    b.Property<string>("MaterialName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("MaterialType")
                        .HasColumnType("int");

                    b.HasKey("MaterialDictionaryId");

                    b.ToTable("MaterialDictionary");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderId"), 1L, 1);

                    b.Property<string>("ContractNumber")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.Property<int>("SupplierId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("SupplierId");

                    b.ToTable("Order");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.OrderHistory", b =>
                {
                    b.Property<int>("OrderHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderHistoryId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderStatus")
                        .HasColumnType("int");

                    b.HasKey("OrderHistoryId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderHistory");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.OrderItem", b =>
                {
                    b.Property<int>("OrderItemId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OrderItemId"), 1L, 1);

                    b.Property<int>("Cost")
                        .HasColumnType("int");

                    b.Property<int>("InventoryId")
                        .HasColumnType("int");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int?>("QualityCheckingGrade")
                        .HasColumnType("int");

                    b.HasKey("OrderItemId");

                    b.HasIndex("InventoryId");

                    b.HasIndex("OrderId");

                    b.ToTable("OrderItem");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Position", b =>
                {
                    b.Property<int>("PositionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PositionId"), 1L, 1);

                    b.Property<string>("JobTitle")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("PositionId");

                    b.ToTable("Position");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Project", b =>
                {
                    b.Property<int>("ProjectId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectId"), 1L, 1);

                    b.Property<DateTime>("PlanOverDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlanStartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ProjectTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("ProjectId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.ProjectHistory", b =>
                {
                    b.Property<int>("ProjectHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ProjectHistoryId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectStatus")
                        .HasColumnType("int");

                    b.HasKey("ProjectHistoryId");

                    b.HasIndex("ProjectId");

                    b.ToTable("ProjectHistory");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Supplier", b =>
                {
                    b.Property<int>("SupplierId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("SupplierId"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("nvarchar(128)");

                    b.Property<string>("SName")
                        .IsRequired()
                        .HasMaxLength(512)
                        .HasColumnType("nvarchar(512)");

                    b.HasKey("SupplierId");

                    b.ToTable("Supplier");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Transportation", b =>
                {
                    b.Property<int>("TransportationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportationId"), 1L, 1);

                    b.Property<int>("DestinationId")
                        .HasColumnType("int");

                    b.Property<int?>("OriginId")
                        .HasColumnType("int");

                    b.Property<DateTime>("PlanArrivalDateTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("PlanDepartureDateTime")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.HasKey("TransportationId");

                    b.HasIndex("DestinationId");

                    b.HasIndex("OriginId");

                    b.ToTable("Transportation");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.TransportationHistory", b =>
                {
                    b.Property<int>("TransportationHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TransportationHistoryId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("TransportationId")
                        .HasColumnType("int");

                    b.Property<int>("TransportationStatus")
                        .HasColumnType("int");

                    b.HasKey("TransportationHistoryId");

                    b.HasIndex("TransportationId");

                    b.ToTable("TransportationHistory");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Work", b =>
                {
                    b.Property<int>("WorkId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkId"), 1L, 1);

                    b.Property<DateTime>("PlanOverDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("PlanStartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProjectId")
                        .HasColumnType("int");

                    b.Property<int>("WorkDictionaryId")
                        .HasColumnType("int");

                    b.HasKey("WorkId");

                    b.HasIndex("ProjectId");

                    b.HasIndex("WorkDictionaryId");

                    b.ToTable("Work");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.WorkDictionary", b =>
                {
                    b.Property<int>("WorkDictionaryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkDictionaryId"), 1L, 1);

                    b.Property<string>("WorkTitle")
                        .IsRequired()
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("WorkDictionaryId");

                    b.ToTable("WorkDictionary");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.WorkHistory", b =>
                {
                    b.Property<int>("WorkHistoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("WorkHistoryId"), 1L, 1);

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("WorkId")
                        .HasColumnType("int");

                    b.Property<int>("WorkStatus")
                        .HasColumnType("int");

                    b.HasKey("WorkHistoryId");

                    b.HasIndex("WorkId");

                    b.ToTable("WorkHistory");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.AppUser", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Assignment", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.AssignmentDictionary", "AssignmentDictionary")
                        .WithMany()
                        .HasForeignKey("AssignmentDictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesignBureauWebApplication.Models.Work", "Work")
                        .WithMany("Assignments")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AssignmentDictionary");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.AssignmentHistory", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Assignment", "Assignment")
                        .WithMany()
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Consumption", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Assignment", "Assignment")
                        .WithMany()
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesignBureauWebApplication.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Employee", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Position", "Position")
                        .WithMany()
                        .HasForeignKey("PositionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Position");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Equipment", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.EquipmentDictionary", "EquipmentDictionary")
                        .WithMany()
                        .HasForeignKey("EquipmentDictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EquipmentDictionary");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.EquipmentHistory", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Equipment", "Equipment")
                        .WithMany("EquipmentHistories")
                        .HasForeignKey("EquipmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Execution", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Assignment", "Assignment")
                        .WithMany()
                        .HasForeignKey("AssignmentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesignBureauWebApplication.Models.Employee", "Employee")
                        .WithMany()
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Assignment");

                    b.Navigation("Employee");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.ExecutionOrder", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Work", "NextWork")
                        .WithMany()
                        .HasForeignKey("NextWorkId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.HasOne("DesignBureauWebApplication.Models.Work", "Work")
                        .WithMany()
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("NextWork");

                    b.Navigation("Work");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Inventory", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Equipment", "Equipment")
                        .WithOne("Inventory")
                        .HasForeignKey("DesignBureauWebApplication.Models.Inventory", "EquipmentId");

                    b.HasOne("DesignBureauWebApplication.Models.Material", "Material")
                        .WithMany()
                        .HasForeignKey("MaterialId");

                    b.Navigation("Equipment");

                    b.Navigation("Material");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.InventoryTransportation", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesignBureauWebApplication.Models.Transportation", "Transportation")
                        .WithMany()
                        .HasForeignKey("TransportationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Transportation");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.InventoryTransportationHistory", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.InventoryTransportation", "InventoryTransportation")
                        .WithMany()
                        .HasForeignKey("InventoryTransportationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InventoryTransportation");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Material", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.MaterialDictionary", "MaterialDictionary")
                        .WithMany()
                        .HasForeignKey("MaterialDictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("MaterialDictionary");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Order", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Supplier", "Supplier")
                        .WithMany()
                        .HasForeignKey("SupplierId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Supplier");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.OrderHistory", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.OrderItem", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Inventory", "Inventory")
                        .WithMany()
                        .HasForeignKey("InventoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesignBureauWebApplication.Models.Order", "Order")
                        .WithMany()
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Inventory");

                    b.Navigation("Order");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.ProjectHistory", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Project", "Project")
                        .WithMany("ProjectHistories")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Transportation", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Location", "Destination")
                        .WithMany()
                        .HasForeignKey("DestinationId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.HasOne("DesignBureauWebApplication.Models.Location", "Origin")
                        .WithMany()
                        .HasForeignKey("OriginId")
                        .OnDelete(DeleteBehavior.NoAction);

                    b.Navigation("Destination");

                    b.Navigation("Origin");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.TransportationHistory", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Transportation", "Transportation")
                        .WithMany()
                        .HasForeignKey("TransportationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Transportation");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Work", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Project", "Project")
                        .WithMany("Works")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesignBureauWebApplication.Models.WorkDictionary", "WorkDictionary")
                        .WithMany()
                        .HasForeignKey("WorkDictionaryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("WorkDictionary");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.WorkHistory", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.Work", "Work")
                        .WithMany("WorkHistories")
                        .HasForeignKey("WorkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Work");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("DesignBureauWebApplication.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("DesignBureauWebApplication.Models.AppUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Equipment", b =>
                {
                    b.Navigation("EquipmentHistories");

                    b.Navigation("Inventory")
                        .IsRequired();
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Project", b =>
                {
                    b.Navigation("ProjectHistories");

                    b.Navigation("Works");
                });

            modelBuilder.Entity("DesignBureauWebApplication.Models.Work", b =>
                {
                    b.Navigation("Assignments");

                    b.Navigation("WorkHistories");
                });
#pragma warning restore 612, 618
        }
    }
}
